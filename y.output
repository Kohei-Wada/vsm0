Terminals unused in grammar

    DO
    SWITCH
    CASE
    DEFAULT


State 27 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list s_list

    2 decl_list: %empty
    3          | decl_list decl ';'

    4 decl: TYPE ID
    5     | decl ',' ID
    6     | TYPE ID '=' const_int
    7     | decl ',' ID '=' const_int

    8 const_int: NUM
    9          | ADDOP NUM

   10 s_list: stmnt
   11       | s_list stmnt

   12 stmnt: expr ';'
   13      | ';'
   14      | '{' s_list '}'
   15      | write_stmnt ';'
   16      | read_stmnt ';'
   17      | if_part

   18 @1: %empty

   19 stmnt: if_part ELSE @1 stmnt

   20 $@2: %empty

   21 $@3: %empty

   22 $@4: %empty

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' $@3 opt_expr ')' $@4 stmnt

   24 @5: %empty

   25 $@6: %empty

   26 stmnt: WHILE @5 '(' expr ')' $@6 stmnt
   27      | BREAK ';'
   28      | CONTI ';'
   29      | error ';'

   30 write_stmnt: WRITE expr
   31            | write_stmnt ',' expr

   32 read_stmnt: READ LHS
   33           | read_stmnt ',' LHS

   34 expr: LHS '=' expr

   35 @7: %empty

   36 @8: %empty

   37 expr: expr '?' @7 expr ':' @8 expr
   38     | expr ADDOP expr
   39     | expr MULOP expr
   40     | expr LAND expr
   41     | expr LOR expr
   42     | expr RELOP expr
   43     | PPMM ID
   44     | ID PPMM
   45     | ADDOP expr
   46     | '!' expr
   47     | '(' expr ')'
   48     | ID
   49     | NUM

   50 @9: %empty

   51 if_part: IF '(' expr ')' @9 stmnt

   52 opt_expr: %empty
   53         | expr

   54 tst_expr: %empty
   55         | expr

   56 LHS: ID


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 46
    '(' (40) 23 26 47 51
    ')' (41) 23 26 47 51
    ',' (44) 5 7 31 33
    ':' (58) 37
    ';' (59) 3 12 13 15 16 23 27 28 29
    '=' (61) 6 7 34
    '?' (63) 37
    '{' (123) 14
    '}' (125) 14
    error (256) 29
    TYPE (258) 4 6
    IF (259) 51
    ELSE (260) 19
    WHILE (261) 26
    DO (262)
    FOR (263) 23
    SWITCH (264)
    CASE (265)
    DEFAULT (266)
    BREAK (267) 27
    CONTI (268) 28
    NUM <int_value> (269) 8 9 49
    ID <name> (270) 4 5 6 7 43 44 48 56
    ADDOP <op> (271) 9 38 45
    MULOP <op> (272) 39
    LAND <op> (273) 40
    LOR <op> (274) 41
    WRITE <op> (275) 30
    READ <op> (276) 32
    PPMM <op> (277) 43 44
    RELOP <op> (278) 42
    UM (279)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    decl_list (37)
        on left: 2 3
        on right: 1 3
    decl (38)
        on left: 4 5 6 7
        on right: 3 5 7
    const_int <int_value> (39)
        on left: 8 9
        on right: 6 7
    s_list (40)
        on left: 10 11
        on right: 1 11 14
    stmnt (41)
        on left: 12 13 14 15 16 17 19 23 26 27 28 29
        on right: 10 11 19 23 26 51
    @1 (42)
        on left: 18
        on right: 19
    $@2 (43)
        on left: 20
        on right: 23
    $@3 (44)
        on left: 21
        on right: 23
    $@4 (45)
        on left: 22
        on right: 23
    @5 (46)
        on left: 24
        on right: 26
    $@6 (47)
        on left: 25
        on right: 26
    write_stmnt (48)
        on left: 30 31
        on right: 15 31
    read_stmnt (49)
        on left: 32 33
        on right: 16 33
    expr <int_value> (50)
        on left: 34 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 12 26 30 31 34 37 38 39 40 41 42 45 46 47 51 53 55
    @7 (51)
        on left: 35
        on right: 37
    @8 (52)
        on left: 36
        on right: 37
    if_part <int_value> (53)
        on left: 51
        on right: 17 19
    @9 (54)
        on left: 50
        on right: 51
    opt_expr <int_value> (55)
        on left: 52 53
        on right: 23
    tst_expr <int_value> (56)
        on left: 54 55
        on right: 23
    LHS (57)
        on left: 56
        on right: 32 33 34


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (decl_list)

    program    go to state 1
    decl_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decl_list . s_list
    3 decl_list: decl_list . decl ';'

    error  shift, and go to state 4
    TYPE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    decl         go to state 21
    s_list       go to state 22
    stmnt        go to state 23
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 3

    0 $accept: program $end .

    $default  accept


State 4

   29 stmnt: error . ';'

    ';'  shift, and go to state 29


State 5

    4 decl: TYPE . ID
    6     | TYPE . ID '=' const_int

    ID  shift, and go to state 30


State 6

   51 if_part: IF . '(' expr ')' @9 stmnt

    '('  shift, and go to state 31


State 7

   26 stmnt: WHILE . @5 '(' expr ')' $@6 stmnt

    $default  reduce using rule 24 (@5)

    @5  go to state 32


State 8

   23 stmnt: FOR . '(' opt_expr ';' $@2 tst_expr ';' $@3 opt_expr ')' $@4 stmnt

    '('  shift, and go to state 33


State 9

   27 stmnt: BREAK . ';'

    ';'  shift, and go to state 34


State 10

   28 stmnt: CONTI . ';'

    ';'  shift, and go to state 35


State 11

   49 expr: NUM .

    $default  reduce using rule 49 (expr)


State 12

   44 expr: ID . PPMM
   48     | ID .
   56 LHS: ID .

    PPMM  shift, and go to state 36

    '='       reduce using rule 56 (LHS)
    $default  reduce using rule 48 (expr)


State 13

   45 expr: ADDOP . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 37
    LHS   go to state 28


State 14

   30 write_stmnt: WRITE . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 38
    LHS   go to state 28


State 15

   32 read_stmnt: READ . LHS

    ID  shift, and go to state 39

    LHS  go to state 40


State 16

   43 expr: PPMM . ID

    ID  shift, and go to state 41


State 17

   46 expr: '!' . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 42
    LHS   go to state 28


State 18

   13 stmnt: ';' .

    $default  reduce using rule 13 (stmnt)


State 19

   14 stmnt: '{' . s_list '}'

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    s_list       go to state 43
    stmnt        go to state 23
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 20

   47 expr: '(' . expr ')'

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 44
    LHS   go to state 28


State 21

    3 decl_list: decl_list decl . ';'
    5 decl: decl . ',' ID
    7     | decl . ',' ID '=' const_int

    ';'  shift, and go to state 45
    ','  shift, and go to state 46


State 22

    1 program: decl_list s_list .
   11 s_list: s_list . stmnt

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    $end  reduce using rule 1 (program)

    stmnt        go to state 47
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 23

   10 s_list: stmnt .

    $default  reduce using rule 10 (s_list)


State 24

   15 stmnt: write_stmnt . ';'
   31 write_stmnt: write_stmnt . ',' expr

    ';'  shift, and go to state 48
    ','  shift, and go to state 49


State 25

   16 stmnt: read_stmnt . ';'
   33 read_stmnt: read_stmnt . ',' LHS

    ';'  shift, and go to state 50
    ','  shift, and go to state 51


State 26

   12 stmnt: expr . ';'
   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57
    ';'    shift, and go to state 58


State 27

   17 stmnt: if_part .
   19      | if_part . ELSE @1 stmnt

    ELSE  shift, and go to state 59

    ELSE      [reduce using rule 17 (stmnt)]
    $default  reduce using rule 17 (stmnt)


State 28

   34 expr: LHS . '=' expr

    '='  shift, and go to state 60


State 29

   29 stmnt: error ';' .

    $default  reduce using rule 29 (stmnt)


State 30

    4 decl: TYPE ID .
    6     | TYPE ID . '=' const_int

    '='  shift, and go to state 61

    $default  reduce using rule 4 (decl)


State 31

   51 if_part: IF '(' . expr ')' @9 stmnt

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 62
    LHS   go to state 28


State 32

   26 stmnt: WHILE @5 . '(' expr ')' $@6 stmnt

    '('  shift, and go to state 63


State 33

   23 stmnt: FOR '(' . opt_expr ';' $@2 tst_expr ';' $@3 opt_expr ')' $@4 stmnt

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    $default  reduce using rule 52 (opt_expr)

    expr      go to state 64
    opt_expr  go to state 65
    LHS       go to state 28


State 34

   27 stmnt: BREAK ';' .

    $default  reduce using rule 27 (stmnt)


State 35

   28 stmnt: CONTI ';' .

    $default  reduce using rule 28 (stmnt)


State 36

   44 expr: ID PPMM .

    $default  reduce using rule 44 (expr)


State 37

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   45     | ADDOP expr .

    $default  reduce using rule 45 (expr)


State 38

   30 write_stmnt: WRITE expr .
   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57

    $default  reduce using rule 30 (write_stmnt)


State 39

   56 LHS: ID .

    $default  reduce using rule 56 (LHS)


State 40

   32 read_stmnt: READ LHS .

    $default  reduce using rule 32 (read_stmnt)


State 41

   43 expr: PPMM ID .

    $default  reduce using rule 43 (expr)


State 42

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   46     | '!' expr .

    $default  reduce using rule 46 (expr)


State 43

   11 s_list: s_list . stmnt
   14 stmnt: '{' s_list . '}'

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '}'    shift, and go to state 66
    '('    shift, and go to state 20

    stmnt        go to state 47
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 44

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   47     | '(' expr . ')'

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57
    ')'    shift, and go to state 67


State 45

    3 decl_list: decl_list decl ';' .

    $default  reduce using rule 3 (decl_list)


State 46

    5 decl: decl ',' . ID
    7     | decl ',' . ID '=' const_int

    ID  shift, and go to state 68


State 47

   11 s_list: s_list stmnt .

    $default  reduce using rule 11 (s_list)


State 48

   15 stmnt: write_stmnt ';' .

    $default  reduce using rule 15 (stmnt)


State 49

   31 write_stmnt: write_stmnt ',' . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 69
    LHS   go to state 28


State 50

   16 stmnt: read_stmnt ';' .

    $default  reduce using rule 16 (stmnt)


State 51

   33 read_stmnt: read_stmnt ',' . LHS

    ID  shift, and go to state 39

    LHS  go to state 70


State 52

   38 expr: expr ADDOP . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 71
    LHS   go to state 28


State 53

   39 expr: expr MULOP . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 72
    LHS   go to state 28


State 54

   40 expr: expr LAND . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 73
    LHS   go to state 28


State 55

   41 expr: expr LOR . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 74
    LHS   go to state 28


State 56

   42 expr: expr RELOP . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 75
    LHS   go to state 28


State 57

   37 expr: expr '?' . @7 expr ':' @8 expr

    $default  reduce using rule 35 (@7)

    @7  go to state 76


State 58

   12 stmnt: expr ';' .

    $default  reduce using rule 12 (stmnt)


State 59

   19 stmnt: if_part ELSE . @1 stmnt

    $default  reduce using rule 18 (@1)

    @1  go to state 77


State 60

   34 expr: LHS '=' . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 78
    LHS   go to state 28


State 61

    6 decl: TYPE ID '=' . const_int

    NUM    shift, and go to state 79
    ADDOP  shift, and go to state 80

    const_int  go to state 81


State 62

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   51 if_part: IF '(' expr . ')' @9 stmnt

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57
    ')'    shift, and go to state 82


State 63

   26 stmnt: WHILE @5 '(' . expr ')' $@6 stmnt

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 83
    LHS   go to state 28


State 64

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   53 opt_expr: expr .

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57

    $default  reduce using rule 53 (opt_expr)


State 65

   23 stmnt: FOR '(' opt_expr . ';' $@2 tst_expr ';' $@3 opt_expr ')' $@4 stmnt

    ';'  shift, and go to state 84


State 66

   14 stmnt: '{' s_list '}' .

    $default  reduce using rule 14 (stmnt)


State 67

   47 expr: '(' expr ')' .

    $default  reduce using rule 47 (expr)


State 68

    5 decl: decl ',' ID .
    7     | decl ',' ID . '=' const_int

    '='  shift, and go to state 85

    $default  reduce using rule 5 (decl)


State 69

   31 write_stmnt: write_stmnt ',' expr .
   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57

    $default  reduce using rule 31 (write_stmnt)


State 70

   33 read_stmnt: read_stmnt ',' LHS .

    $default  reduce using rule 33 (read_stmnt)


State 71

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   38     | expr ADDOP expr .
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55

    $default  reduce using rule 38 (expr)


State 72

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   39     | expr MULOP expr .
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    $default  reduce using rule 39 (expr)


State 73

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   40     | expr LAND expr .
   41     | expr . LOR expr
   42     | expr . RELOP expr

    $default  reduce using rule 40 (expr)


State 74

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   41     | expr LOR expr .
   42     | expr . RELOP expr

    $default  reduce using rule 41 (expr)


State 75

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   42     | expr RELOP expr .

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55

    $default  reduce using rule 42 (expr)


State 76

   37 expr: expr '?' @7 . expr ':' @8 expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 86
    LHS   go to state 28


State 77

   19 stmnt: if_part ELSE @1 . stmnt

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    stmnt        go to state 87
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 78

   34 expr: LHS '=' expr .
   37     | expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57

    $default  reduce using rule 34 (expr)


State 79

    8 const_int: NUM .

    $default  reduce using rule 8 (const_int)


State 80

    9 const_int: ADDOP . NUM

    NUM  shift, and go to state 88


State 81

    6 decl: TYPE ID '=' const_int .

    $default  reduce using rule 6 (decl)


State 82

   51 if_part: IF '(' expr ')' . @9 stmnt

    $default  reduce using rule 50 (@9)

    @9  go to state 89


State 83

   26 stmnt: WHILE @5 '(' expr . ')' $@6 stmnt
   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57
    ')'    shift, and go to state 90


State 84

   23 stmnt: FOR '(' opt_expr ';' . $@2 tst_expr ';' $@3 opt_expr ')' $@4 stmnt

    $default  reduce using rule 20 ($@2)

    $@2  go to state 91


State 85

    7 decl: decl ',' ID '=' . const_int

    NUM    shift, and go to state 79
    ADDOP  shift, and go to state 80

    const_int  go to state 92


State 86

   37 expr: expr . '?' @7 expr ':' @8 expr
   37     | expr '?' @7 expr . ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57
    ':'    shift, and go to state 93


State 87

   19 stmnt: if_part ELSE @1 stmnt .

    $default  reduce using rule 19 (stmnt)


State 88

    9 const_int: ADDOP NUM .

    $default  reduce using rule 9 (const_int)


State 89

   51 if_part: IF '(' expr ')' @9 . stmnt

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    stmnt        go to state 94
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 90

   26 stmnt: WHILE @5 '(' expr ')' . $@6 stmnt

    $default  reduce using rule 25 ($@6)

    $@6  go to state 95


State 91

   23 stmnt: FOR '(' opt_expr ';' $@2 . tst_expr ';' $@3 opt_expr ')' $@4 stmnt

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    $default  reduce using rule 54 (tst_expr)

    expr      go to state 96
    tst_expr  go to state 97
    LHS       go to state 28


State 92

    7 decl: decl ',' ID '=' const_int .

    $default  reduce using rule 7 (decl)


State 93

   37 expr: expr '?' @7 expr ':' . @8 expr

    $default  reduce using rule 36 (@8)

    @8  go to state 98


State 94

   51 if_part: IF '(' expr ')' @9 stmnt .

    $default  reduce using rule 51 (if_part)


State 95

   26 stmnt: WHILE @5 '(' expr ')' $@6 . stmnt

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    stmnt        go to state 99
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 96

   37 expr: expr . '?' @7 expr ':' @8 expr
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr
   55 tst_expr: expr .

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57

    $default  reduce using rule 55 (tst_expr)


State 97

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr . ';' $@3 opt_expr ')' $@4 stmnt

    ';'  shift, and go to state 100


State 98

   37 expr: expr '?' @7 expr ':' @8 . expr

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    expr  go to state 101
    LHS   go to state 28


State 99

   26 stmnt: WHILE @5 '(' expr ')' $@6 stmnt .

    $default  reduce using rule 26 (stmnt)


State 100

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' . $@3 opt_expr ')' $@4 stmnt

    $default  reduce using rule 21 ($@3)

    $@3  go to state 102


State 101

   37 expr: expr . '?' @7 expr ':' @8 expr
   37     | expr '?' @7 expr ':' @8 expr .
   38     | expr . ADDOP expr
   39     | expr . MULOP expr
   40     | expr . LAND expr
   41     | expr . LOR expr
   42     | expr . RELOP expr

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    LAND   shift, and go to state 54
    LOR    shift, and go to state 55
    RELOP  shift, and go to state 56
    '?'    shift, and go to state 57

    $default  reduce using rule 37 (expr)


State 102

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' $@3 . opt_expr ')' $@4 stmnt

    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    '('    shift, and go to state 20

    $default  reduce using rule 52 (opt_expr)

    expr      go to state 64
    opt_expr  go to state 103
    LHS       go to state 28


State 103

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' $@3 opt_expr . ')' $@4 stmnt

    ')'  shift, and go to state 104


State 104

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' $@3 opt_expr ')' . $@4 stmnt

    $default  reduce using rule 22 ($@4)

    $@4  go to state 105


State 105

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' $@3 opt_expr ')' $@4 . stmnt

    error  shift, and go to state 4
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    FOR    shift, and go to state 8
    BREAK  shift, and go to state 9
    CONTI  shift, and go to state 10
    NUM    shift, and go to state 11
    ID     shift, and go to state 12
    ADDOP  shift, and go to state 13
    WRITE  shift, and go to state 14
    READ   shift, and go to state 15
    PPMM   shift, and go to state 16
    '!'    shift, and go to state 17
    ';'    shift, and go to state 18
    '{'    shift, and go to state 19
    '('    shift, and go to state 20

    stmnt        go to state 106
    write_stmnt  go to state 24
    read_stmnt   go to state 25
    expr         go to state 26
    if_part      go to state 27
    LHS          go to state 28


State 106

   23 stmnt: FOR '(' opt_expr ';' $@2 tst_expr ';' $@3 opt_expr ')' $@4 stmnt .

    $default  reduce using rule 23 (stmnt)
